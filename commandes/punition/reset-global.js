const { SlashCommandBuilder } = require("discord.js");
const Economie = require("../../Sequelize/mod√®les/argent/√©conomie");
const BubbleProfile = require("../../Sequelize/mod√®les/argent/bulle/BubbleProfile");
const Pets = require("../../Sequelize/mod√®les/argent/vente/animaux/pets");
const UserPets = require("../../Sequelize/mod√®les/argent/vente/animaux/userpets");
const daily = require("../../Sequelize/mod√®les/argent/cooldowns/daily");

module.exports = {
  data: new SlashCommandBuilder()
    .setName("reset-global")
    .setDescription("R√©initialise le solde et l'√©tat de tous les membres")
    .addStringOption((option) =>
      option
        .setName("sujet")
        .setDescription("Choisissez le sujet √† r√©initialiser")
        .setRequired(true)
        .addChoices(
          { name: "Pi√®ces", value: "pi√®ces" },
          { name: "Bulles", value: "bulles" },
          { name: "Pets", value: "pets" }
        )
    ),

  async execute(interaction) {
    if (!interaction.member.permissions.has("ADMINISTRATOR")) {
      return interaction.reply({
        content:
          "üö´ Tu n'as pas les permissions n√©cessaires pour utiliser cette commande.",
      });
    }

    const sujet = interaction.options.getString("sujet");

    const allUsers = await Economie.findAll();
    const allBubbleProfiles = await BubbleProfile.findAll();
    const allUserPets = await UserPets.findAll();

    if (allUsers.length === 0) {
      return interaction.reply(
        "‚ö†Ô∏è Aucun utilisateur avec un solde enregistr√©."
      );
    }

    if (sujet === "pi√®ces") {
      for (const user of allUsers) {
        user.pi√®ces = 0;
        await user.save();
      }
      return interaction.reply("‚úÖ Toutes les pi√®ces ont √©t√© r√©initialis√©es !");
    }

    if (sujet === "bulles") {
      for (const bubbleProfile of allBubbleProfiles) {
        bubbleProfile.bubbles = 0;
        await bubbleProfile.save();
      }
      return interaction.reply("‚úÖ Toutes les bulles ont √©t√© r√©initialis√©es !");
    }

    if (sujet === "pets") {
      for (const userPet of allUserPets) {
        await userPet.destroy();
      }
      return interaction.reply("‚úÖ Tous les pets ont √©t√© r√©initialis√©s !");
    }

    return interaction.reply("‚ö†Ô∏è Sujet de r√©initialisation invalide.");
  },
};
