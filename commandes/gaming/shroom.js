const {
  SlashCommandBuilder,
  MessageFlags,
  EmbedBuilder,
} = require("discord.js");
const Shroom = require("../../Sequelize/mod√®les/champignongue/Shroom");
const ShroomUsage = require("../../Sequelize/mod√®les/champignongue/Shroomusage");

module.exports = {
  data: new SlashCommandBuilder()
    .setName("shroom")
    .setDescription("Place un champignon pi√©g√© dans le salon"),

  async execute(interaction) {
    await interaction.deferReply({ flags: MessageFlags.Ephemeral });

    const userId = interaction.user.id;
    const channelId = interaction.channel.id;

    const now = new Date();
    const cooldown = 2 * 60 * 60 * 1000;

    const usage = await ShroomUsage.findOne({ where: { userId } });

    if (usage && now - usage.lastUsedAt < cooldown) {
      const timeLeft = cooldown - (now - usage.lastUsedAt);
      const hours = Math.floor(timeLeft / (1000 * 60 * 60));
      const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

      return interaction.editReply({
        content: `‚è≥ Tu as d√©j√† pos√© un champignon r√©cemment !\nTu pourras en replanter un dans **${hours}h ${minutes}m ${seconds}s**.`,
      });
    }

    const existing = await Shroom.findOne({ where: { channelId } });
    if (existing) {
      return interaction.editReply({
        content:
          "‚ùå Ce salon est d√©j√† pi√©g√©. Tu perds ton champignon actuel et ne pourra r√©essayer que dans 2 heures",
      });
    }

    await Shroom.create({ userId, channelId, placedAt: now });
    await ShroomUsage.upsert({ userId, lastUsedAt: now });

    const embed = new EmbedBuilder()
      .setColor(0x00aa88)
      .setTitle("üçÑ Champignon plac√©")
      .setDescription(`Tu as pi√©g√© ce salon avec un champignon bien planqu√©...`)
      .setFooter({ text: "Mini-jeu : Le meilleur Scout de Bandle üçÑ" })
      .setTimestamp();

    return interaction.editReply({ embeds: [embed] });
  },
};
