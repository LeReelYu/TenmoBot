const { SlashCommandBuilder, MessageEmbed } = require("discord.js");

module.exports = {
  data: new SlashCommandBuilder()
    .setName("help")
    .setDescription("Affiche de l'aide pour les commandes disponibles")
    .addStringOption((option) =>
      option
        .setName("commande")
        .setDescription("Le nom de la commande pour plus d'infos")
        .setRequired(false)
    ),

  async execute(interaction) {
    const commandName = interaction.options.getString("commande");

    // Liste des commandes avec leurs descriptions et emojis
    const commands = [
      {
        name: "/infoutilisateur",
        description:
          "üßë‚Äçüíª Permet d'obtenir des informations sur le membre choisi !",
      },
      {
        name: "/infoserveur",
        description: "üí¨ Permet d'obtenir des informations sur le serveur !",
      },
      {
        name: "/confess",
        description:
          "ü§´ Permet d'envoyer un message anonyme (dr√¥le ou s√©rieux) dans le salon pr√©vu √† cet effet !",
      },
      {
        name: "/nude",
        description: "üòè Recevoir un DM de Tenmo avec une photo al√©atoire !",
      },
      {
        name: "/traduction",
        description:
          "üåç Permet de traduire le texte que tu souhaites dans une autre langue !",
      },
      {
        name: "/rouletterusse",
        description:
          "üî´ Permet de tenter ta chance avec une roulette russe qui se souvient du nombre de tirs effectu√©s !",
      },
      {
        name: "/rouletteglobale",
        description:
          "üé∞ Permet de tenter ta chance avec une roulette russe mais avec la m√™me arme pour tout le monde !",
      },
      {
        name: "/solde",
        description: "üí∞ Permet de voir ton compte bancaire !",
      },
      {
        name: "/transfert",
        description: "üîÑ Permet de transf√©rer tes pi√®ces √† un autre membre !",
      },
      {
        name: "/crime",
        description: "üí∏ Permet d'obtenir de l'argent gr√¢ce au crime !",
      },
      {
        name: "/daily",
        description: "üïê Permet d'obtenir des pi√®ces chaque jour !",
      },
      {
        name: "/hourly",
        description: "‚è≥ Permet d'obtenir quelques pi√®ces chaque heure !",
      },
      {
        name: "/blackjack",
        description: "üÉè Permet de jouer au blackjack en pariant tes pi√®ces !",
      },
      {
        name: "/roulette",
        description: "üé≤ Permet de jouer √† la roulette en pariant tes pi√®ces !",
      },
      {
        name: "/peche",
        description:
          "üé£ Permet de p√™cher des poissons en misant de l'argent en √©change !",
      },
      {
        name: "/vol",
        description:
          "üíº Permet d'essayer de voler les pi√®ces d'un autre joueur !",
      },
      {
        name: "/bourse",
        description: "üìà Permet de miser ton argent en bourse !",
      },
      {
        name: "/shop",
        description: "üõí Permet d'acc√©der au magasin du serveur !",
      },
      {
        name: "/inventaire",
        description: "üì¶ Permet d'acc√©der √† ton inventaire !",
      },
      {
        name: "/forceroulette",
        description: "üî´ Permet de forcer la roulette russe sur un membre !",
      },
    ];

    const commandsPerPage = 6; // Nombre de commandes par page
    const totalPages = Math.ceil(commands.length / commandsPerPage);

    // Si une commande sp√©cifique est demand√©e
    if (commandName) {
      return this.showCommandHelp(interaction, commandName);
    }

    // Fonction pour cr√©er l'embed avec pagination
    const createHelpEmbed = (page) => {
      const start = (page - 1) * commandsPerPage;
      const end = start + commandsPerPage;
      const currentCommands = commands.slice(start, end);

      const embed = new MessageEmbed()
        .setColor("#28a745")
        .setTitle("Commandes Disponibles")
        .setDescription(
          currentCommands
            .map((c) => `**${c.name}** - ${c.description}`)
            .join("\n")
        )
        .setFooter(`Page ${page} / ${totalPages}`)
        .setImage("https://giffiles.alphacoders.com/529/52912.gif"); // Gif de l'aide g√©n√©rale

      return embed;
    };

    // Envoie la premi√®re page
    const initialEmbed = await interaction.reply({
      embeds: [createHelpEmbed(1)],
      fetchReply: true,
      ephemeral: true,
    });

    // Ajoute les r√©actions pour la navigation
    await initialEmbed.react("‚¨ÖÔ∏è");
    await initialEmbed.react("‚û°Ô∏è");

    const filter = (reaction, user) => {
      return (
        ["‚¨ÖÔ∏è", "‚û°Ô∏è"].includes(reaction.emoji.name) &&
        user.id === interaction.user.id
      );
    };

    const collector = initialEmbed.createReactionCollector({
      filter,
      time: 60000, // Temps en millisecondes (1 minute)
    });

    let currentPage = 1;

    collector.on("collect", async (reaction) => {
      // Retirer la r√©action apr√®s que l'utilisateur l'ait utilis√©e
      await reaction.users.remove(interaction.user.id);

      if (reaction.emoji.name === "‚û°Ô∏è" && currentPage < totalPages) {
        currentPage++;
      } else if (reaction.emoji.name === "‚¨ÖÔ∏è" && currentPage > 1) {
        currentPage--;
      }

      // Mettre √† jour l'embed pour la page suivante
      await initialEmbed.edit({
        embeds: [createHelpEmbed(currentPage)],
      });
    });

    collector.on("end", () => {
      initialEmbed.reactions.removeAll(); // Retirer toutes les r√©actions √† la fin
    });
  },

  // Fonction pour afficher l'aide d'une commande sp√©cifique
  async showCommandHelp(interaction, commandName) {
    switch (commandName.toLowerCase()) {
      case "infoutilisateur":
        return interaction.reply({
          content:
            "Commande `/infoutilisateur` :\n" +
            "Cette commande te donnera des informations sur le membre choisi comme la date √† laquelle il a rejoint discord, le serveur ou encore son id et sa photo de profil !",
          ephemeral: true,
        });
      case "infoserveur":
        return interaction.reply({
          content:
            "Commande `/infoserveur` :\n" +
            "Cette commande te donnera des informations sur le serveur comme sa date de cr√©ation, son nombre de membre, sa banni√®re ou sa photo de profil !",
          ephemeral: true,
        });
      case "solde":
        return interaction.reply({
          content:
            "Commande `/solde` :\n" +
            "Cette commande te permet de conna√Ætre ton solde bancaire\n Elle te pr√©sente ton nombre de pi√®ces (monnaie courante) et de champignons (monnaie d'event) avec un message du banquier temmie",
        });
      case "nude":
        return interaction.reply({
          content:
            "Commande `/nude` :\n" +
            "Cette commande te permet de recevoir de tenmo une image ou un gif rigolo avec une petite chance que ce soit lui en petite tenue",
        });
      case "confess":
        return interaction.reply({
          content:
            "Commande `/confess` :\n" +
            "Cette commande te permet d'envoyer un message anonyme dans le salon sp√©cifique !\n Cela te permet de parler √† coeur ouvert sans peur du jugement car personne ne sait qui tu es !\n La commande poss√®de trois formes :\nLa blague, pour plaisanter en anonyme\nLe s√©rieux, pour tout sujet qui le m√©rite\nLe vent, pour ouvrir ton sac quand √ßa ne va pas\nToute confession est enti√®rement anonyme est intra√ßable",
        });
      case "traduction":
        return interaction.reply({
          content:
            "Commande `/traduction` :\n" +
            "Cette commande te permet de traduire un texte.\nTu n'as qu'√† choisir la langue de traduction et noter le message d'origine !",
        });
      case "rouletterusse":
        return interaction.reply({
          content:
            "Commande `/rouletterusse` :\n" +
            "Cette commande te permet de jouer √† la roulette russe tout seul.\n Ton arme est un revolver avec 1 balle, √† toi de voir jusqu'o√π tu es pr√™t √† jouer.\n Les balles sont sauvegard√©es donc chaque choix a une cons√©quence.",
        });
      case "rouletteglobale":
        return interaction.reply({
          content:
            "Commande `/rouletteglobale` :\n" +
            "Cette commande te permet de jouer √† la roulette avec les autres membres du serveur.\n Donc les balles sont sauvegard√©es pour tous.\n De plus, le nombre de balles est lui aussi al√©atoire √† chaque recharge.",
        });
      case "solde":
        return interaction.reply({
          content:
            "Commande `/solde` :\n" +
            "Cette commande te permet de voir ton compte bancaire.\n Tu y verras tes pi√®ces et tes champignons.\n Les pi√®ces sont une monnaie obtenable avec les commandes de jeux du bot et servent √† s'amuser avec lui.\n Les champignons sont monnaie obtenable en event qui permet d'obtenir des objets particuliers dans la boutique itin√©rante.",
        });
      case "transfert":
        return interaction.reply({
          content:
            "Commande `/transfert` :\n" +
            "Cette commande te permet de transf√©rer une partie de ta monnaie √† un autre membre de ton choix dans la mesure du possible.",
        });
      case "crime":
        return interaction.reply({
          content:
            "Commande `/crime` :\n" +
            "Cette commande te permet d'essayer de gagner une bonne quantit√© d'argent chaque 45 minutes mais tu peux tout autant en perdre",
        });
      case "daily":
        return interaction.reply({
          content:
            "Commande `/daily` :\n" +
            "Cette commande te permet de recevoir une bonne quantit√© d'argent chaque 24 heures",
        });
      case "hourly":
        return interaction.reply({
          content:
            "Commande `/hourly` :\n" +
            "Cette commande te permet de recevoir une quantit√© d'argent plus faible que /daily mais chaque heure",
        });
      case "blackjack":
        return interaction.reply({
          content:
            "Commande `/blackjack` :\n" +
            "Cette commande te permet, √©change d'une mise de pi√®ces, de jouer au blackjack et de multiplier ta mise selon les r√®gles classiques.",
        });
      case "roulette":
        return interaction.reply({
          content:
            "Commande `/roulette` :\n" +
            "Cette commande te permet, en √©change d'une mise de pi√®ces, de jouer √† la roulette et de multiplier ta mise selon les r√®gles de la roulette europ√©enne.",
        });
      case "peche":
        return interaction.reply({
          content:
            "Commande `/peche` :\n" +
            "Cette commande te permet, en √©change d'une mise de pi√®ces, de jouer √† un mini-jeu de p√™che dans lequel **si** la goutte d'eau en r√©action devient un poisson, tu dois cliquer dessus vite pour obtenir 75% de ta mise.\n Il n'est pas toujours possible qu'apparaisse un poisson, dans ce cas-l√† la mise est perdue.",
        });
      case "vol":
        return interaction.reply({
          content:
            "Commande `/vol` :\n" +
            "Cette commande te permet d'essayer de voler un membre chaque trois heures.\n Le vol fonctionne sur trois modes qui rapportent plus ou moins mais avec des risques diff√©rents d'√©chouer.\n Si quelqu'un a achet√© une protection anti-vol, tu rates √† coup s√ªr ta tentative.",
        });
      case "shop":
        return interaction.reply({
          content:
            "Commande `/shop` :\n" +
            "Cette commande te permet d'ouvrir le magasin Bonajade qui contient pleins d'objets achetable avec des pi√®ces.\n Son contenu est changeant en permanence.",
        });
      case "inventaire":
        return interaction.reply({
          content:
            "Commande `/inventaire` :\n" +
            "Cette commande te permet d'acc√©der √† ton inventaire.\n Ton inventaire contient tous les objets que tu as obtenu notamment du magasin Bonajade.",
        });
      case "forceroulette":
        return interaction.reply({
          content:
            "Commande `/forceroulette` :\n" +
            "Cette commande te permet de forcer une /rouletteglobale sur le membre de ton choix si tu as achet√© l'objet forceroulette au pr√©alable.",
        });
      default:
        return interaction.reply({
          content:
            "Commande inconnue. Utilise `/help` pour voir les commandes disponibles.",
          ephemeral: true,
        });
    }
  },
};
