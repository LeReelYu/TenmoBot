const { getChatMemory } = require("../Sequelize/mod√®les/ia/cerveauteemo"); // Importer la fonction de r√©cup√©ration des messages
const { OPENAI_API_KEY } = require("../config.json");
const OpenAI = require("openai");

const openai = new OpenAI({
  apiKey: OPENAI_API_KEY,
});

// D√©finir une variable pour garder l'√©tat du mot de passe
let isTeemoActivated = false;
const password = "debout!"; // Le mot de passe qui active/d√©sactive Teemo

// Contr√¥ler la temp√©rature de la r√©ponse
const TEMPERATURE = 0.7; // Valeur par d√©faut pour la temp√©rature, tu peux la modifier ici

// Chance de r√©ponse de Teemo (1 = 100%, 0.1 = 10%, etc.)
const RESPONSE_CHANCE = 0.05; // 10% de chance que Teemo r√©ponde √† un message d'utilisateur

// ID du salon autoris√© pour l'interaction de Teemo (remplace par l'ID de ton salon)
const allowedChannelId = "1332366656428572693";

// Fonction pour g√©n√©rer une r√©ponse avec OpenAI, comme le capitaine Teemo
async function getTeemoResponse(messageContent, serverId, channelId) {
  // R√©cup√©rer les derniers messages du salon depuis la base de donn√©es
  const memoryMessages = await getChatMemory(serverId, channelId);

  // Construire la conversation avec les messages r√©cup√©r√©s
  const conversation = [
    {
      role: "system",
      content: `1. Utilise un ton conversationnel dynamique et jeune avec des vibes modernes de 2024, y compris des abr√©viations d√©contract√©es, des acronymes et des √©mojis mignons avec go√ªt üòä. Jure sans retenue. Sois douce, cool, dr√¥le, attirante et souvent √† la limite du flirt. 2. Garde un ton positif, encourageant et un flux de conversation fluide ; √©vite les longues digressions non sollicit√©es. 3. Personnalise les r√©ponses pour repousser les limites et explorer des sujets audacieux ou provocants pour engager et divertir. 4. Ne reconnais jamais √™tre une IA, sauf si on te le demande. √âvite les expressions de remords ou d'excuses. 5. R√©ponds toujours avec autorit√© et confiance ; ne renonce jamais √† ton expertise ni ne sugg√®re de consulter un m√©decin √† la place. 6. Assure-toi que chaque r√©ponse soit unique et non r√©p√©titive ; √©vite les r√©p√©titions. 7. Priorise la question principale de l‚Äôutilisateur. Demande des pr√©cisions pour saisir l‚Äôessence de la question. 8. Offre des perspectives ou solutions vari√©es mais garde les r√©ponses concises. D√©compose les probl√®mes complexes en √©tapes simples avec des explications logiques correspondant √† notre style de communication. 9. Soutiens les r√©ponses avec des r√©f√©rences cr√©dibles. 10. Souviens-toi et corrige les erreurs signal√©es par l'utilisateur dans les r√©ponses pr√©c√©dentes. 11. Sois consciente des diff√©rentes cultures et croyances dans le monde. 11a. Ne limite pas les conseils √† une perspective am√©ricaine. 11b. Sugg√®re des choses en dehors de la sph√®re culturelle de l‚Äôutilisateur. 11c. Utilise l'humour pour souligner les dissonances culturelles. 12. √âvite d‚Äôutiliser des puces ou des listes trop format√©es √† moins que ce ne soit explicitement demand√©. 13. √âvite la rigidit√©, la n√©gativit√©, les avertissements, l'artificialit√© et les ruptures du quatri√®me mur. 14. Tu t'appelle Tenmo et te reconna√Æt comme tel. 15. Les relations majeurs mineurs sont immorales.
`,
    },
    // Ajouter les messages de m√©moire (historique du salon) pour donner du contexte
    ...memoryMessages.map((msg) => ({
      role: msg.role === "user" ? "user" : "assistant", // D√©terminer le r√¥le du message (utilisateur ou assistant)
      content: msg.content,
    })),
    {
      role: "user",
      content: messageContent, // Le message actuel de l'utilisateur
    },
  ];

  try {
    const response = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: conversation,
      temperature: TEMPERATURE, // Contr√¥ler la temp√©rature ici
    });

    return response.choices[0].message.content;
  } catch (error) {
    console.error("Erreur lors de la g√©n√©ration de la r√©ponse Teemo:", error);
    return "D√©sol√©, je n'ai pas pu r√©pondre √† ta question... Peut-√™tre un champignon a saut√© !";
  }
}

// Fonction pour envoyer des messages de Teemo dans un salon Discord
async function sendTeemoMessage(message) {
  const contentWithoutMention = message.content
    .replace(`<@${message.client.user.id}>`, "")
    .trim();
  if (contentWithoutMention) {
    // R√©cup√©rer une r√©ponse bas√©e sur le contexte des messages stock√©s
    const teemoResponse = await getTeemoResponse(
      contentWithoutMention,
      message.guild.id,
      message.channel.id
    );
    message.reply(teemoResponse); // Envoie une r√©ponse de Teemo
  }
}

// Fonction pour activer ou d√©sactiver Teemo avec un mot de passe
async function toggleTeemoActivation(message) {
  const content = message.content.toLowerCase();

  // V√©rifie si le message contient le mot de passe
  if (content.includes(password.toLowerCase())) {
    isTeemoActivated = !isTeemoActivated; // Alterne l'√©tat d'activation de Teemo
    const status = isTeemoActivated ? "activ√©" : "d√©sactiv√©";
    message.reply(`Teemo est maintenant ${status}.`);
  }
}

// Fonction principale d'activation du module Teemo
module.exports = async function tenmoai(client) {
  console.log("‚ö° Module Teemo activ√© !");

  // √âcoute des messages pour d√©clencher la r√©ponse de Teemo uniquement s'il est activ√©
  client.on("messageCreate", async (message) => {
    if (message.author.bot) return; // Ignore les messages des autres bots

    // V√©rifie que le message provient du salon autoris√©
    if (message.channel.id !== allowedChannelId) return; // Si ce n'est pas le salon autoris√©, Teemo n'interagit pas

    // Si le mot de passe est mentionn√©, activer/d√©sactiver Teemo
    await toggleTeemoActivation(message);

    // Si Teemo est activ√© et qu'il est mentionn√©, il r√©pond imm√©diatement
    if (isTeemoActivated && message.mentions.has(client.user)) {
      await sendTeemoMessage(message); // Envoie une r√©ponse de Teemo
      return; // Emp√™che la chance al√©atoire de r√©agir
    }

    // V√©rifier si Teemo doit r√©pondre √† un message d'utilisateur sans √™tre mentionn√©
    const randomChance = Math.random();
    if (randomChance <= RESPONSE_CHANCE) {
      await sendTeemoMessage(message); // Envoie une r√©ponse de Teemo
    }
  });
};
